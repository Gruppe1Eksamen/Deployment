version: "3.8"

services:
  authservice:
    build:
      context: ./AuthenticationService/AuthenticationService/AuthenticationServiceAPI
      dockerfile: Dockerfile
    expose:
      - "8080"
    environment:
      VAULT_ENDPOINT: "https://vault_dev:8201"
      VAULT_TOKEN: "00000000-0000-0000-0000-000000000000"
      Secret: "ouvesbvusbvsubvuosaebesvasuiesbu"
      Issuer: "vesuvbsuevbsuovsibvoesovusevesvueos"
      USERSERVICE_ENDPOINT: "http://nginx:4000"
    depends_on:
      - userservice

  listingservice:
    build:
      context: ./ListingService/ListingService/ListingServiceAPI
      dockerfile: Dockerfile
    expose:
      - "8080"
    environment:
      VAULT_ENDPOINT: "https://vault_dev:8201"
      VAULT_TOKEN: "00000000-0000-0000-0000-000000000000"
      Secret: "ouvesbvusbvsubvuosaebesvasuiesbu"
      Issuer: "vesuvbsuevbsuovsibvoesovusevesvueos"
      MongoConnectionString: "mongodb://admin:1234@mongodb:27017/?authSource=admin"
      ListingDB: "dockertest"
      Listings: "Listings"
      Catalogs: "Catalogs"
    depends_on:
      - mongodb

  nginx:
    image: nginx:latest
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf:ro
    depends_on:
      - authservice
      - userservice
      - listingservice
      - auctionservice
    ports:
      - "4000:4000"

  vault_dev:
    image: hashicorp/vault:latest
    restart: on-failure:10
    ports:
      - "8201:8201"
    environment:
      VAULT_ADDR: 'https://0.0.0.0:8201'
      VAULT_LOCAL_CONFIG: |-
        {
          "listener": [
            {
              "tcp": {
                "address": "0.0.0.0:8201",
                "tls_disable": "0",
                "tls_cert_file": "/data/cert.pem",
                "tls_key_file": "/data/key.pem"
              }
            }
          ],
          "default_lease_ttl": "168h",
          "max_lease_ttl": "720h"
        }
      VAULT_DEV_ROOT_TOKEN_ID: '00000000-0000-0000-0000-000000000000'
      VAULT_TOKEN: '00000000-0000-0000-0000-000000000000'
    cap_add:
      - IPC_LOCK
    volumes:
      - ./vault-volume:/data
    healthcheck:
      retries: 5
    command: >
      server -dev -dev-root-token-id="00000000-0000-0000-0000-000000000000"

  vault-init:
    image: hashicorp/vault:latest
    command: sh "/app/vault_init.sh"
    environment:
      - VAULT_SKIP_VERIFY=true
    depends_on:
      - vault_dev
    healthcheck:
      retries: 5
    volumes:
      - ./vault-init/vault_init.sh:/app/vault_init.sh

  mongodb:
    image: mongo:latest
    environment:
      MONGO_INITDB_ROOT_USERNAME: admin
      MONGO_INITDB_ROOT_PASSWORD: 1234
    ports:
      - "27018:27017"
    volumes:
      - mongodb_data:/data/db

  userservice:
    build:
      context: ./Userservice/UserService/UserServiceAPI
      dockerfile: Dockerfile
    expose:
      - "8080"
    environment:
      MongoConnectionString: "mongodb://admin:1234@mongodb:27017/?authSource=admin"
      DatabaseName: "dockertest"
      CollectionName: "users"
      VAULT_ENDPOINT: "https://vault_dev:8201"
      VAULT_TOKEN: "00000000-0000-0000-0000-000000000000"
      Secret: "ouvesbvusbvsubvuosaebesvasuiesbu"
      Issuer: "vesuvbsuevbsuovsibvoesovusevesvueos"
    depends_on:
      - mongodb

  auctionservice:
    build:
      context: ./AuctionService/AuctionService/AuctionServiceAPI
      dockerfile: Dockerfile
    expose:
      - "8080"
    environment:
      VAULT_ENDPOINT: "https://vault_dev:8201"
      VAULT_TOKEN: "00000000-0000-0000-0000-000000000000"
      Secret: "ouvesbvusbvsubvuosaebesvasuiesbu"
      Issuer: "vesuvbsuevbsuovsibvoesovusevesvueos"
      MongoConnectionString: "mongodb://admin:1234@mongodb:27017/?authSource=admin"
      AuctionDatabase: "dockertest"
      AuctionCollection: "Auctions"
      LISTINGSERVICE_ENDPOINT: "http://nginx:4000"
    depends_on:
      - mongodb
      - listingservice

  loki:
    image: grafana/loki:2.9.3
    ports:
      - "3100:3100"

  grafana:
    image: grafana/grafana:latest
    ports:
      - "3000:3000"
    depends_on:
      - loki
    environment:
      GF_SECURITY_ADMIN_USER: admin
      GF_SECURITY_ADMIN_PASSWORD: admin

volumes:
  mongodb_data:
